version: "3.7"
services:
  app:
   build: 
     context: ./
     dockerfile: php.dockerfile
   container_name: php
   networks: 
     - lnu-internship

  db:
   image: mysql:5.7
   container_name: lnu-internship-db
   restart: unless-stopped
   environment:
     MYSQL_DATABASE: ${DB_DATABASE}
     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
     MYSQL_PASSWORD: ${DB_PASSWORD}
     MYSQL_USERNAME: ${DB_USERNAME}
     SERVICE_TAGS: dev
     SERVICE_NAME: mysql
   volumes:
     - ./docker-compose/mysql:/docker-entrypoint-initdb.d
   networks:
     - lnu-internship

  nginx:
   image: nginx:alpine
   container_name: lnu-internship-nginx
   restart: unless-stopped
   ports:
     - 80:80
     - 443:443
   depends_on:
     - app
     - db
   volumes:
     - ./:/var/www/html
     - ./docker-compose/nginx/cert/:/etc/nginx/certs/mkcert
     - ./docker-compose/nginx/lnu-internship.com.conf:/etc/nginx/conf.d/default.conf
   networks:
     - lnu-internship

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - lnu-internship
    
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks:
      - lnu-internship

networks:
  lnu-internship:
    driver: bridge
